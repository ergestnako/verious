//
//    File:           _typography.scss
//    Description:
//
//
//    Table of Contents:
//
//    1. Sassline
//    2. Html
//    3. Paragraph
//    4. Heading
//    5. List
//    6. Link
//    7. Code
//

// ---------------------------------------------
//    1. Sassline
// ---------------------------------------------

@import "../_sassline/_reset";
@import "../_sassline/_modular-scale";
@import "../_sassline/_mixins";

// ---------------------------------------------
//    2. Html
// ---------------------------------------------

@mixin vs-html() {
  @include rootsize();
}

// ---------------------------------------------
//    3. Paragraph
// ---------------------------------------------

@mixin vs-p($size) {
  font-family: unquote(map-get($bodytype, font-family));
  font-style: normal;
  font-weight: map-get($bodytype, regular);

  @if $size == 1 {
    @include fontsize(zeta, all);
    @include baseline(zeta, $bodytype, 2, 2, all);
  }

  a {
    display: inline;
    color: inherit;

    &:visited {
      color: inherit;
    }
  }
}

// ---------------------------------------------
//    4. Heading
// ---------------------------------------------

@mixin vs-h($type, $size) {
  font-family: unquote(map-get($type, font-family));
  font-style: normal;
  font-weight: map-get($type, bold);

  @if $size == 1 {
    @include fontsize(beta, all);
    @include baseline(beta, $type, 3, 2, all);
  } @elseif $size == 2 {
    @include fontsize(gamma, all);
    @include baseline(gamma, $type, 3, 2, all);
  } @elseif $size == 3 {
    @include fontsize(delta, all);
    @include baseline(delta, $type, 2, 2, all);
  } @elseif $size == 3 {
    @include fontsize(epsilon, all);
    @include baseline(epsilon, $type, 2, 2, all);
  } @elseif $size == 4 {
    @include fontsize(epsilon, all);
    @include baseline(epsilon, $type, 2, 2, all);
  } @elseif $size == 5 {
    @include fontsize(zeta, all);
    @include baseline(zeta, $type, 2, 2, all);
  } @elseif $size == 6 {
    @include fontsize(theta, all);
    @include baseline(theta, $type, 2, 2, all);
    text-transform: uppercase;
    letter-spacing: 0.05rem;
  }
}

// ---------------------------------------------
//    5. List
// ---------------------------------------------

@mixin vs-li($size) {
  font-family: unquote(map-get($bodytype, font-family));
  font-style: normal;
  font-weight: map-get($bodytype, regular);

  @if $size == 1 {
    @include fontsize(zeta, all);
    @include baseline(zeta, $bodytype, 2, 0, all);
  }

  a {
    display: inline;
    font-family: unquote(map-get($bodytype, font-family));
    font-style: normal;
    font-weight: map-get($bodytype, regular);
    text-decoration: none;
    @include fontsize(zeta, all);
    @include baseline(zeta, $bodytype, 2, 2, all);
    color: inherit;

    &:visited {
      color: inherit;
    }
  }

  > ul > li:first-child {
    padding-top: 0;
  }
}

@mixin vs-ul() {
  @include vs-margin(left, 2);
  @include vs-margin(bottom, 2);

  ul {
    @include vs-margin(left, 2);
    margin-bottom: 0;
  }
}

@mixin vs-ul--unstyled() {
  margin-left: 0;
  list-style: none;

  ul {
    @include vs-margin(left, 2);
  }
}



// ---------------------------------------------
//    6. Link
// ---------------------------------------------

@mixin vs-a($size) {
  display: inline-block;
  font-family: unquote(map-get($bodytype, font-family));
  font-style: normal;
  font-weight: map-get($bodytype, regular);

  @if $size == 1 {
    @include fontsize(zeta, all);
    @include baseline(zeta, $bodytype, 2, 2, all);
  }

  &:visited {
    color: inherit;
  }
}

// ---------------------------------------------
//    7. Code
// ---------------------------------------------

@mixin vs-pre() {
  background-color: $vs-grey-100;
  overflow: auto;
  white-space: inherit;
  margin: 0;
  @include vs-padding(right, 2);
  @include vs-padding(left, 2);
  @include vs-margin(bottom, 2);
}

@mixin vs-code($size) {
  white-space: pre;
  font-family: unquote(map-get($monospacetype, font-family));
  font-style: normal;
  font-weight: map-get($monospacetype, regular);

  @if $size == 1 {
    @include fontsize(theta, all);
    @include baseline(theta, $monospacetype, 2, 0, all);
  }
}
